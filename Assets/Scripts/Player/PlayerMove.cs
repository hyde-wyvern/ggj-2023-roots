//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerMove.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerMove : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerMove()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerMove"",
    ""maps"": [
        {
            ""name"": ""CameraMove"",
            ""id"": ""029f781a-b1a3-4167-a846-726cc38a3c67"",
            ""actions"": [
                {
                    ""name"": ""MouseLeftClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ee2c4ea0-c8df-497f-aed1-ca7016910f7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9741aa12-3b4a-4c07-a0b9-d391e643df9a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Normalize(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ContinueDialogues"",
                    ""type"": ""Button"",
                    ""id"": ""093f769c-8522-4169-8537-ea6ee2a4e016"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PressAnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""fd636e4b-7e51-4a43-831a-1b84f6f0e315"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bf88ad02-2640-4c2f-836d-d77429d99d1c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1658fbdd-e28c-4e26-9031-0aa696a6b933"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""34a9b658-65ef-4a3d-aff5-b7413ea5dffd"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""03b29cbf-5849-4906-8759-6b01168642f0"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cfdcfb4f-7b18-4cf2-823e-2924601dac03"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ContinueDialogues"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64f6ed2d-2a54-4c8e-a8a7-3b2ff441a6f6"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f89760dd-722e-42a9-b276-f11eed5037aa"",
                    ""path"": ""<Mouse>/backButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25c16107-418d-4da1-9eeb-f09de3769886"",
                    ""path"": ""<Mouse>/forwardButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d9f5059-4479-4c5a-b062-7a08da68f085"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3444724-40cc-4c7b-808e-01f9216c6e28"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e252d84-ac0d-4139-893c-85d39782f79d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PressAnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CameraMove
        m_CameraMove = asset.FindActionMap("CameraMove", throwIfNotFound: true);
        m_CameraMove_MouseLeftClick = m_CameraMove.FindAction("MouseLeftClick", throwIfNotFound: true);
        m_CameraMove_MouseScroll = m_CameraMove.FindAction("MouseScroll", throwIfNotFound: true);
        m_CameraMove_ContinueDialogues = m_CameraMove.FindAction("ContinueDialogues", throwIfNotFound: true);
        m_CameraMove_PressAnyKey = m_CameraMove.FindAction("PressAnyKey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CameraMove
    private readonly InputActionMap m_CameraMove;
    private ICameraMoveActions m_CameraMoveActionsCallbackInterface;
    private readonly InputAction m_CameraMove_MouseLeftClick;
    private readonly InputAction m_CameraMove_MouseScroll;
    private readonly InputAction m_CameraMove_ContinueDialogues;
    private readonly InputAction m_CameraMove_PressAnyKey;
    public struct CameraMoveActions
    {
        private @PlayerMove m_Wrapper;
        public CameraMoveActions(@PlayerMove wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseLeftClick => m_Wrapper.m_CameraMove_MouseLeftClick;
        public InputAction @MouseScroll => m_Wrapper.m_CameraMove_MouseScroll;
        public InputAction @ContinueDialogues => m_Wrapper.m_CameraMove_ContinueDialogues;
        public InputAction @PressAnyKey => m_Wrapper.m_CameraMove_PressAnyKey;
        public InputActionMap Get() { return m_Wrapper.m_CameraMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMoveActions set) { return set.Get(); }
        public void SetCallbacks(ICameraMoveActions instance)
        {
            if (m_Wrapper.m_CameraMoveActionsCallbackInterface != null)
            {
                @MouseLeftClick.started -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.performed -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseLeftClick;
                @MouseLeftClick.canceled -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseLeftClick;
                @MouseScroll.started -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.performed -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.canceled -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnMouseScroll;
                @ContinueDialogues.started -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnContinueDialogues;
                @ContinueDialogues.performed -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnContinueDialogues;
                @ContinueDialogues.canceled -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnContinueDialogues;
                @PressAnyKey.started -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnPressAnyKey;
                @PressAnyKey.performed -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnPressAnyKey;
                @PressAnyKey.canceled -= m_Wrapper.m_CameraMoveActionsCallbackInterface.OnPressAnyKey;
            }
            m_Wrapper.m_CameraMoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MouseLeftClick.started += instance.OnMouseLeftClick;
                @MouseLeftClick.performed += instance.OnMouseLeftClick;
                @MouseLeftClick.canceled += instance.OnMouseLeftClick;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
                @ContinueDialogues.started += instance.OnContinueDialogues;
                @ContinueDialogues.performed += instance.OnContinueDialogues;
                @ContinueDialogues.canceled += instance.OnContinueDialogues;
                @PressAnyKey.started += instance.OnPressAnyKey;
                @PressAnyKey.performed += instance.OnPressAnyKey;
                @PressAnyKey.canceled += instance.OnPressAnyKey;
            }
        }
    }
    public CameraMoveActions @CameraMove => new CameraMoveActions(this);
    public interface ICameraMoveActions
    {
        void OnMouseLeftClick(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnContinueDialogues(InputAction.CallbackContext context);
        void OnPressAnyKey(InputAction.CallbackContext context);
    }
}
